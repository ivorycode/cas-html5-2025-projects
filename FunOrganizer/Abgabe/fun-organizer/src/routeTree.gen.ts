/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthenticatedDashboardRouteImport } from './routes/_authenticated/dashboard'
import { Route as AuthenticatedUserSettingsRouteImport } from './routes/_authenticated/user/settings'
import { Route as AuthenticatedUserProfileRouteImport } from './routes/_authenticated/user/profile'
import { Route as AuthenticatedMessagesMessageListRouteImport } from './routes/_authenticated/messages/message-list'
import { Route as AuthenticatedEventsEventsRouteImport } from './routes/_authenticated/events/events'
import { Route as AuthenticatedEventsCreateRouteImport } from './routes/_authenticated/events/create'
import { Route as AuthenticatedEventsAddquestionRouteImport } from './routes/_authenticated/events/addquestion'
import { Route as AuthenticatedEventsEventIdRouteImport } from './routes/_authenticated/events/$eventId'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedDashboardRoute = AuthenticatedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedUserSettingsRoute =
  AuthenticatedUserSettingsRouteImport.update({
    id: '/user/settings',
    path: '/user/settings',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedUserProfileRoute =
  AuthenticatedUserProfileRouteImport.update({
    id: '/user/profile',
    path: '/user/profile',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedMessagesMessageListRoute =
  AuthenticatedMessagesMessageListRouteImport.update({
    id: '/messages/message-list',
    path: '/messages/message-list',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedEventsEventsRoute =
  AuthenticatedEventsEventsRouteImport.update({
    id: '/events/events',
    path: '/events/events',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedEventsCreateRoute =
  AuthenticatedEventsCreateRouteImport.update({
    id: '/events/create',
    path: '/events/create',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedEventsAddquestionRoute =
  AuthenticatedEventsAddquestionRouteImport.update({
    id: '/events/addquestion',
    path: '/events/addquestion',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedEventsEventIdRoute =
  AuthenticatedEventsEventIdRouteImport.update({
    id: '/events/$eventId',
    path: '/events/$eventId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/events/$eventId': typeof AuthenticatedEventsEventIdRoute
  '/events/addquestion': typeof AuthenticatedEventsAddquestionRoute
  '/events/create': typeof AuthenticatedEventsCreateRoute
  '/events/events': typeof AuthenticatedEventsEventsRoute
  '/messages/message-list': typeof AuthenticatedMessagesMessageListRoute
  '/user/profile': typeof AuthenticatedUserProfileRoute
  '/user/settings': typeof AuthenticatedUserSettingsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/events/$eventId': typeof AuthenticatedEventsEventIdRoute
  '/events/addquestion': typeof AuthenticatedEventsAddquestionRoute
  '/events/create': typeof AuthenticatedEventsCreateRoute
  '/events/events': typeof AuthenticatedEventsEventsRoute
  '/messages/message-list': typeof AuthenticatedMessagesMessageListRoute
  '/user/profile': typeof AuthenticatedUserProfileRoute
  '/user/settings': typeof AuthenticatedUserSettingsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRoute
  '/_authenticated/events/$eventId': typeof AuthenticatedEventsEventIdRoute
  '/_authenticated/events/addquestion': typeof AuthenticatedEventsAddquestionRoute
  '/_authenticated/events/create': typeof AuthenticatedEventsCreateRoute
  '/_authenticated/events/events': typeof AuthenticatedEventsEventsRoute
  '/_authenticated/messages/message-list': typeof AuthenticatedMessagesMessageListRoute
  '/_authenticated/user/profile': typeof AuthenticatedUserProfileRoute
  '/_authenticated/user/settings': typeof AuthenticatedUserSettingsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/dashboard'
    | '/events/$eventId'
    | '/events/addquestion'
    | '/events/create'
    | '/events/events'
    | '/messages/message-list'
    | '/user/profile'
    | '/user/settings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/dashboard'
    | '/events/$eventId'
    | '/events/addquestion'
    | '/events/create'
    | '/events/events'
    | '/messages/message-list'
    | '/user/profile'
    | '/user/settings'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/login'
    | '/_authenticated/dashboard'
    | '/_authenticated/events/$eventId'
    | '/_authenticated/events/addquestion'
    | '/_authenticated/events/create'
    | '/_authenticated/events/events'
    | '/_authenticated/messages/message-list'
    | '/_authenticated/user/profile'
    | '/_authenticated/user/settings'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  LoginRoute: typeof LoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/user/settings': {
      id: '/_authenticated/user/settings'
      path: '/user/settings'
      fullPath: '/user/settings'
      preLoaderRoute: typeof AuthenticatedUserSettingsRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/user/profile': {
      id: '/_authenticated/user/profile'
      path: '/user/profile'
      fullPath: '/user/profile'
      preLoaderRoute: typeof AuthenticatedUserProfileRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/messages/message-list': {
      id: '/_authenticated/messages/message-list'
      path: '/messages/message-list'
      fullPath: '/messages/message-list'
      preLoaderRoute: typeof AuthenticatedMessagesMessageListRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/events/events': {
      id: '/_authenticated/events/events'
      path: '/events/events'
      fullPath: '/events/events'
      preLoaderRoute: typeof AuthenticatedEventsEventsRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/events/create': {
      id: '/_authenticated/events/create'
      path: '/events/create'
      fullPath: '/events/create'
      preLoaderRoute: typeof AuthenticatedEventsCreateRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/events/addquestion': {
      id: '/_authenticated/events/addquestion'
      path: '/events/addquestion'
      fullPath: '/events/addquestion'
      preLoaderRoute: typeof AuthenticatedEventsAddquestionRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/events/$eventId': {
      id: '/_authenticated/events/$eventId'
      path: '/events/$eventId'
      fullPath: '/events/$eventId'
      preLoaderRoute: typeof AuthenticatedEventsEventIdRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
  }
}

interface AuthenticatedRouteChildren {
  AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRoute
  AuthenticatedEventsEventIdRoute: typeof AuthenticatedEventsEventIdRoute
  AuthenticatedEventsAddquestionRoute: typeof AuthenticatedEventsAddquestionRoute
  AuthenticatedEventsCreateRoute: typeof AuthenticatedEventsCreateRoute
  AuthenticatedEventsEventsRoute: typeof AuthenticatedEventsEventsRoute
  AuthenticatedMessagesMessageListRoute: typeof AuthenticatedMessagesMessageListRoute
  AuthenticatedUserProfileRoute: typeof AuthenticatedUserProfileRoute
  AuthenticatedUserSettingsRoute: typeof AuthenticatedUserSettingsRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedDashboardRoute: AuthenticatedDashboardRoute,
  AuthenticatedEventsEventIdRoute: AuthenticatedEventsEventIdRoute,
  AuthenticatedEventsAddquestionRoute: AuthenticatedEventsAddquestionRoute,
  AuthenticatedEventsCreateRoute: AuthenticatedEventsCreateRoute,
  AuthenticatedEventsEventsRoute: AuthenticatedEventsEventsRoute,
  AuthenticatedMessagesMessageListRoute: AuthenticatedMessagesMessageListRoute,
  AuthenticatedUserProfileRoute: AuthenticatedUserProfileRoute,
  AuthenticatedUserSettingsRoute: AuthenticatedUserSettingsRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
